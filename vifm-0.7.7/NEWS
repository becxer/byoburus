May 16, 2014
============

vifm v0.7.7 release
-------------------

New version provides more customizations for several existing features
and more convenient interaction with them.

Thanks to all contributors and especially those who tried beta version.

Main changes:
 - vifm has had support for navigation by file number for years, finally it
   can display those numbers;
 - support of trash directories got better with ability to have trash per
   mount point and new trash menus;
 - command-line mode now has Ctrl-X prefixed keys that insert parts of
   filenames and filters (kind of Ctrl-R in Vim);
 - bookmarks are now timestamped for more predictable management (mainly
   deletion and overwriting);
 - for security reasons remote commands are now disabled at configuration
   stage by default;
 - most of long-running operations (:find, :copy, etc.) now can be cancelled
   by pressing Ctrl-C;
 - menus with list of files got unified "gf" (for navigation) and "e" (for
   editing) shortcuts;
 - several fixes and %n macro for better integration with terminal
   multiplexers;
 - ability to sort list view with disabled grouping of directories;
 - expression parser was extended in a couple of ways;
 - added three more sample color schemes.

Configuration:
 - added --enable-remote-cmd switch to configure script disabled by default, as
   current implementation of the feature is insecure.

Menus and dialogs:
 - added "gf" (go to file) and "e" (open in editor) keys to :grep, :find,
   :locate and user menu with navigation (%M macro).

Macros:
 - added %A macro to 'findprg' and 'grepprg' options, which is expanded to
   unmodified list of arguments (thanks to Robert Sarkozi);
 - added %n macro which suppresses using of terminal multiplexer in a command
   (user-defined :command, :!command or :file[x]type action).

Key bindings:
 - added Ctrl-W z key to normal and view modes, which closes preview pane or
   view modes (thanks to filterfalse).

:set command and options:
 - added "type" key to the 'sort' option to allow controlling grouping of
   directories (thanks to Daniel R., a.k.a. reicheltd);
 - added 'number', 'relativenumber' and 'numberwidth' options to control
   displaying of file numbers (thanks to filterfalse and greye);
 - extended 'trashdir' to handle list of path, some of which can specify
   location of trash directories local to each mount point (thanks to
   smpolymen and Sergei Shilovsky).

Command-line mode related changes:
 - added Ctrl-X a/c/d/e/m/r/t/= keys to command-line mode that insert parts
   of file names and values of filters (see related documentation) (thanks to
   ranousse and filterfalse);
 - added :lstrash command-line command, which displays list of files in trash
   (thanks to Sergei Shilovsky);
 - added :trashes command-line command, which lists all non-empty trash
   directories (thanks to Sergei Shilovsky);
 - treat semicolon (";") as a valid range separator for command-line commands;
 - allow empty ranges for command without name (as in :4).

Angle bracket notation:
 - added <nop> angle bracket notation (thanks to filterfalse).

Scripting:
 - added &option syntax for expressions (returns value of an option);
 - extended parser to support integer number constants and unary minus and
   plus operators;
 - extended parser to support <, <=, >= and > comparison operators for strings
   and integers.

Performance:
 - optimized file name comparison on sorting.

Documentation:
 - documented special bookmarks;
 - more verbose documentation on :filextype and its usage.

Color scheme related changes:
 - added sample light color scheme (provided by Daniel R., a.k.a. reicheltd);
 - added sample dark solarized color scheme (provided by Stéphane, a.k.a.
   istib);
 - added zenburn color scheme (provided by Svyatoslav Mishyn, a.k.a. juef).

TUI (Text User Interface):
 - handle backspace in preview window as terminal emulators do (thanks to Svenn
   Are Bjerkem, a.k.a. svenn).

Only on Windows:
 - added handling of paths with backward slashes for :find/:locate/:grep/%M
   menus on Windows (thanks to Robert Sarkozi);
 - fixed extending filetypes that are missing macro on Windows when cmd.exe
   shell is used (thanks to Daniel Polanco, a.k.a. dlpolanco);
 - fixed work with filenames contining special symbols on Windows with cmd.exe
   shell (thanks to Daniel Polanco, a.k.a. dlpolanco);
 - fixed testing whether application uses GUI on Windows when path contains
   spaces;
 - fixed extra escaping on prompt filename completion on Windows.

Other changes:
 - added cancellation handling for file system operations and invocations of
   external applications (works best on *nix systems) (thanks to Milan Svoboda,
   a.k.a. tex);
 - made bookmarks merging smarter by storing timestamps.  Removing bookmarks
   now works as expected.  Bookmarks overwriting by another instance shouldn't
   happen anymore.  (Thanks to Michael Maddern, a.k.a. madders.)

Major fixes:
 - fixed file descriptor leak on finishing background tasks (thanks to
   anonymous from linux.org.ru);
 - fixed several bugs that led to segmentation fault;
 - fixed copying/moving files after picking "Overwrite all" conflict resolution
   option (thanks to Stas Malavin).

See change log for full list of changes and by whom they were suggested.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

April 30, 2014
==============

vifm v0.7.7 beta testing has started
------------------------------------

New version provides more customizations for several existing features
and more convenient interaction with them.

The beta stage will last about two weeks.  In case any serious bugs are found
during this period, another beta version might be released.

Main changes:
 - vifm has had support for navigation by file number for years, finally it
   can display those numbers;
 - support of trash directories got better with ability to have trash per
   mount point and new trash menus;
 - command-line mode now has Ctrl-X prefixed keys that insert parts of
   filenames and filters (kind of Ctrl-R in Vim);
 - bookmarks are now timestamped for more predictable management (mainly
   deletion and overwriting);
 - for security reasons remote commands are now disabled at configuration
   stage by default;
 - most of long-running operations (:find, :copy, etc.) now can be cancelled
   by pressing Ctrl-C;
 - menus with list of files got unified "gf" (for navigation) and "e" (for
   editing) shortcuts;
 - several fixes and %n macro for better integration with terminal
   multiplexers;
 - ability to sort list view with disabled grouping of directories;
 - expression parser was extended in a couple of ways;
 - added three more sample color schemes.

Configuration:
 - added --enable-remote-cmd switch to configure script disabled by default, as
   current implementation of the feature is insecure.

Menus and dialogs:
 - added "gf" (go to file) and "e" (open in editor) keys to :grep, :find,
   :locate and user menu with navigation (%M macro).

Macros:
 - added %A macro to 'findprg' and 'grepprg' options, which is expanded to
   unmodified list of arguments (thanks to Robert Sarkozi);
 - added %n macro which suppresses using of terminal multiplexer in a command
   (user-defined :command, :!command or :file[x]type action).

Key bindings:
 - added Ctrl-W z key to normal and view modes, which closes preview pane or
   view modes (thanks to filterfalse).

:set command and options:
 - added "type" key to the 'sort' option to allow controlling grouping of
   directories (thanks to Daniel R., a.k.a. reicheltd);
 - added 'number', 'relativenumber' and 'numberwidth' options to control
   displaying of file numbers (thanks to filterfalse and greye);
 - extended 'trashdir' to handle list of path, some of which can specify
   location of trash directories local to each mount point (thanks to
   smpolymen and Sergei Shilovsky).

Command-line mode related changes:
 - added Ctrl-X a/c/d/e/m/r/t/= keys to command-line mode that insert parts
   of file names and values of filters (see related documentation) (thanks to
   ranousse and filterfalse);
 - added :lstrash command-line command, which displays list of files in trash
   (thanks to Sergei Shilovsky);
 - added :trashes command-line command, which lists all non-empty trash
   directories (thanks to Sergei Shilovsky);
 - treat semicolon (";") as a valid range separator for command-line commands;
 - allow empty ranges for command without name (as in :4).

Angle bracket notation:
 - added <nop> angle bracket notation (thanks to filterfalse).

Scripting:
 - added &option syntax for expressions (returns value of an option);
 - extended parser to support integer number constants and unary minus and
   plus operators;
 - extended parser to support <, <=, >= and > comparison operators for strings
   and integers.

Performance:
 - optimized file name comparison on sorting.

Documentation:
 - documented special bookmarks.

Color scheme related changes:
 - added sample light color scheme (provided by Daniel R., a.k.a. reicheltd);
 - added sample dark solarized color scheme (provided by Stéphane, a.k.a.
   istib);
 - added zenburn color scheme (provided by Svyatoslav Mishyn, a.k.a. juef).

TUI (Text User Interface):
 - handle backspace in preview window as terminal emulators do (thanks to Svenn
   Are Bjerkem, a.k.a. svenn).

Only on Windows:
 - added handling of paths with backward slashes for :find/:locate/:grep/%M
   menus on Windows (thanks to Robert Sarkozi);
 - fixed extending filetypes that are missing macro on Windows when cmd.exe
   shell is used (thanks to Daniel Polanco, a.k.a. dlpolanco);
 - fixed work with filenames contining special symbols on Windows with cmd.exe
   shell (thanks to Daniel Polanco, a.k.a. dlpolanco);
 - fixed testing whether application uses GUI on Windows when path contains
   spaces;
 - fixed extra escaping on prompt filename completion on Windows.

Other changes:
 - added cancellation handling for file system operations and invocations of
   external applications (works best on *nix systems) (thanks to Milan Svoboda,
   a.k.a. tex);
 - made bookmarks merging smarter by storing timestamps.  Removing bookmarks
   now works as expected.  Bookmarks overwriting by another instance shouldn't
   happen anymore.  (Thanks to Michael Maddern, a.k.a. madders.)

Major fixes:
 - fixed file descriptor leak on finishing background tasks (thanks to
   anonymous from linux.org.ru);
 - fixed several bugs that led to segmentation fault.

See change log for full list of changes and by whom they were suggested.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

October 31, 2013
================

vifm v0.7.6 release
-------------------

New minor version brings better integration with environment and external tools
as well as enhances file filtering capabilities in several ways.  Apart from
that, old features were tweaked and some build issues and bugs were resolved.
New Win32 and Win64 single-executable (no DLLs) packages appear first time with
this release.

This time beta stage was quite fruitful.  Thanks to all who installed and tried
beta versions, and special thanks to filterfalse.

Main changes:
 - added interactive local filter;
 - added external editing of command-line content with 'vicmd';
 - added integration with tmux;
 - added options to configure external commands for :apropos, :find, :grep
   and :locate commands;
 - added desktop entry file (\*nix only) and updated application icon;
 - fixed build for some combinations of OS/environments (OS X, 32/64-bit
   cygwin, Windows).

Notice: if you mapped q key to something, new q:, q/, q? and q= keys won't be
available; suggested solution is to change the mapping to qq.

More detailed list of changes.

Performance:
 - increased performance of (re)loading content for view mode (thanks to Robert
   Sarkozi).

Key bindings:
 - process [count] passed to gUU, gU<selector>, gUgU, gu<selector>, guu and gugu
   commands;
 - made all Ctrl-W x keys available in view mode (thanks to filterfalse);
 - changed meaning of the R key in view mode from redrawing view to reloading it
   preserving scroll position (thanks to Robert Sarkozi).

Normal and visual modes related changes:
 - added q:, q/, q? and q= keys (q= is defined for normal mode only) to prompt
   for command-line in external editor;
 - added "=" normal mode key, which activates file name filtering.

Command-line mode related changes:
 - added "=" and "filter" values for :history command, to show history of local
   filter;
 - added Ctrl-G key to start editing in external editor (for editing command,
   search pattern and file renames);
 - added optional argument for :invert command to control more kinds of
   inversion (thanks to filterfalse);
 - better order of command validity checks;
 - show better error message on unmatched quotes in command arguments;
 - store cancelled prompt input in prompt history;
 - check destination path existence before changing directory to it on :sync
   command;
 - use last search pattern as filename filter when :filter command gets an empty
   argument (:filter//, :filter"", :filter'') (thanks to filterfalse);
 - match only filename against pattern in :fileviewer instead of full path.

:set command and options:
 - added 'aproposprg', 'findprg', 'grepprg' and 'locateprg' options to specify
   external commands format;
 - added "fhistory" to 'vifminfo', which controls storing of local filter
   history;
 - added "f" flag to 'cpoptions' option.  It controls initial state of filename
   filter inversion for :filter[!] {regex} command (thanks to filterfalse);
 - from now on not absolute paths for the 'fusehome' options are rejected;
 - expand environment variables in values of the 'fusehome' and 'trashdir'
   options (thanks to filterfalse);
 - more adequate reaction on setting 'trashdir' option to wrong value;
 - do not reset selection on search when 'hlsearch' is reset (thanks to
   filterfalse).

File filtering:
 - distinguish files and directories in filename filter by appending a slash to
   names of directories;
 - separated file name filter into manual and automatic, mainly for convenience.

TUI (Text User Interface):
 - preserve current cursor position on view resorting;
 - force split-view when two paths are specified on command-line (thanks to
   filterfalse);
 - consider 'classify' option on displaying file name in the statusbar (thanks
   to Thomas Nemeth).

For Vim:
 - added syntax and filetype plugins for command-line editing buffers (thanks to
   filterfalse);
 - updated syntax file to highlight more elements (thanks to filterfalse).

Only on Windows:
 - filter files in case insensitive way on Windows;
 - don't wait finishing of GUI applications on Windows (thanks to Robert
   Sarkozi).

Other changes:
 - added integration with tmux (thanks to Seth VanHeulen, a.k.a. svanheulen);
 - added desktop entry file (thanks to Richard Benson);
 - added merge option for name conflict resolution, which allows for merging two
   directories overwriting files with matching names;
 - updated application icon (thanks to Richard Benson for making it);
 - don't overwrite directory stack stored in vifminfo on exit unless it was
   changed in current session;
 - improved documentation on several subjects;
 - display error after sourcing file with unmatched :if/:endif
   statements (thanks to filterfalse).

Major fixes:
 - fixed configuration when wcscasecmp(), wcsncasecmp() or set\_escdelay()
   functions is not available (thanks to Russell Urquhart);
 - fixed reserving of about 1 GiB piece of memory on 256-color terminals (sorry
   about that);
 - fixed running of executable with symbols that require escaping in their
   name (\*nix only).  Strangely enough, it wasn't noticed before;
 - fixed terminal hang after executing several external commands in a
   row (thanks to filterfalse);
 - fixed search of the first element in file list when displaying of parent
   directory is disabled;
 - fixed fails on running executables when 'fastrun' option is on (thanks to
   MadMaverick9).

See change log for full list of changes and by whom they were suggested.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

October 24, 2013
================

vifm v0.7.6 beta testing continued
----------------------------------

First beta version revealed some issues with new functionality and
degradation of previously existing features.  That's why second beta
version is released.  Included fixes primary target Windows platform,
but some of them are related to \*nix systems as well.

Thanks to filterfalse and Robert Sarkozi for their help in finding and
solving those issues.

Additionally, Win64 build is available now.

See change log for quite short list of fixes and updates.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

October 17, 2013
================

vifm v0.7.6 beta testing has started
------------------------------------

New minor version brings better integration with environment and external tools
as well as enhances file filtering capabilities in several ways.  Apart from
that, old features were tweaked and some build issues and bugs were resolved.
New Win32 single-executable (no DLLs) package appears first time with this
release, Win64 package might also be available a bit later.

The beta stage will last about two weeks.  In case any serious bugs are found
during this period, another beta version might be released.

Main changes:
 - added interactive local filter;
 - added external editing of command-line content with 'vicmd';
 - added integration with tmux;
 - added options to configure external commands for :apropos, :find, :grep
   and :locate commands;
 - added desktop entry file (\*nix only) and updated application icon;
 - fixed build on some versions of OS X.

Notice: if you mapped q key to something, new q:, q/, q? and q= keys won't be
available; suggested solution is to change the mapping to qq.

More detailed list of changes.

Performance:
 - increased performance of (re)loading content for view mode (thanks to Robert
   Sarkozi).

Key bindings:
 - process [count] passed to gUU, gU<selector>, gUgU, gu<selector>, guu and gugu
   commands;
 - made all Ctrl-W x keys available in view mode (thanks to filterfalse);
 - changed meaning of the R key in view mode from redrawing view to reloading it
   preserving scroll position (thanks to Robert Sarkozi).

Normal and visual modes related changes:
 - added q:, q/, q? and q= keys (q= is defined for normal mode only) to prompt
   for command-line in external editor;
 - added "=" normal mode key, which activates file name filtering.

Command-line mode related changes:
 - added "=" and "filter" values for :history command, to show history of local
   filter;
 - added Ctrl-G key to start editing in external editor (for editing command,
   search pattern and file renames);
 - added optional argument for :invert command to control more kinds of
   inversion (thanks to filterfalse);
 - better order of command validity checks;
 - show better error message on unmatched quotes in command arguments;
 - store cancelled prompt input in prompt history;
 - check destination path existence before changing directory to it on :sync
   command;
 - use last search pattern as filename filter when :filter command gets an empty
   argument (:filter//, :filter"", :filter'') (thanks to filterfalse);
 - match only filename against pattern in :fileviewer instead of full path.

:set command and options:
 - added 'aproposprg', 'findprg', 'grepprg' and 'locateprg' options to specify
   external commands format;
 - added "fhistory" to 'vifminfo', which controls storing of local filter
   history;
 - added "f" flag to 'cpoptions' option.  It controls initial state of filename
   filter inversion for :filter[!] {regex} command (thanks to filterfalse);
 - from now on not absolute paths for the 'fusehome' options are rejected;
 - expand environment variables in values of the 'fusehome' and 'trashdir'
   options (thanks to filterfalse);
 - more adequate reaction on setting 'trashdir' option to wrong value;
 - do not reset selection on search when 'hlsearch' is reset (thanks to
   filterfalse).

File filtering:
 - distinguish files and directories in filename filter by appending a slash to
   names of directories;
 - separated file name filter into manual and automatic, mainly for convenience.

TUI (Text User Interface):
 - preserve current cursor position on view resorting;
 - force split-view when two paths are specified on command-line (thanks to
   filterfalse);
 - consider 'classify' option on displaying file name in the statusbar (thanks
   to Thomas Nemeth).

For Vim:
 - added syntax and filetype plugins for command-line editing buffers (thanks to
   filterfalse);
 - updated syntax file to highlight more elements (thanks to filterfalse).

Only on Windows:
 - filter files in case insensitive way on Windows;
 - don't wait finishing of GUI applications on Windows (thanks to Robert
   Sarkozi).

Other changes:
 - added integration with tmux (thanks to Seth VanHeulen, a.k.a. svanheulen);
 - added desktop entry file (thanks to Richard Benson);
 - added merge option for name conflict resolution, which allows for merging two
   directories overwriting files with matching names;
 - updated application icon (thanks to Richard Benson for making it);
 - don't overwrite directory stack stored in vifminfo on exit unless it was
   changed in current session;
 - improved documentation on several subjects.

Major fixes:
 - fixed configuration when wcscasecmp(), wcsncasecmp() or set\_escdelay()
   functions is not available (thanks to Russell Urquhart);
 - fixed reserving of about 1 GiB piece of memory on 256-color terminals (sorry
   about that);
 - fixed running of executable with symbols that require escaping in their
   name (\*nix only).  Strangely enough, it wasn't noticed before;
 - fixed terminal hang after executing several external commands in a
   row (thanks to filterfalse);
 - fixed search of the first element in file list when displaying of parent
   directory is disabled;
 - fixed fails on running executables when 'fastrun' option is on (thanks to
   MadMaverick9).

See change log for full list of changes and by whom they were suggested.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

May 10, 2013
==============

vifm v0.7.5 release
-------------------

New version adds one major feature (parsing of escape codes), set of
improvements for existing ones and fixes for bugs.  There are also some changes
in build system and new extra files bundled with vifm.

Main changes:
 - removed using of libtool in build process on *nix-like systems;
 - added parsing of escape codes for the preview pane and less-like view;
 - added expand() builtin function;
 - added Gentoo ebuild and sample color schemes;
 - added macros that are expanded to register's content;
 - added dynamic loading of xlib;
 - added 'shortmess' option;
 - added pausing of shell on external commands fails on Windows;
 - fixed build issues on FreeBSD and OS X systems;
 - fixed for redrawing and searching in less-like mode;
 - fixed issues with :help command on Windows.

More detailed list of changes.

Configuration:
 - added --without/[with]-dyn-X11 flag to the configure script to control
   static/dynamic linking against libX11 library.  Thanks to Hendrik Jaeger
   (a.k.a. henk) for the idea;
 - don't use libtool in build process on *nix platforms (thanks to Merovius).

Documentation:
 - slightly updated plugin related documentation.

Macros:
 - added macros that are expanded to register's content (thanks to Florian
   Baumann, a.k.a. derflob).

:set command and options:
 - added 'shortmess' option and its first flag: "T" to shorten long status-bar
   messages (thanks to ranousse);
 - added "perms" sorting key on *nix (proposed by Daniel Dettlaff, a.k.a.
   dmilith);
 - added new type of option (charset) and used it for 'cpoptions' and
   'shortmess' options;
 - made 'slowfs' option actually work on OS X (thanks to Daniel Dettlaff,
   a.k.a. dmilith).

Color scheme related changes:
 - added sample color schemes (proposed by Daniel Dettlaff, a.k.a. dmilith);
 - don't fallback to default colors on try to switch to a colorscheme, which is
   not supported by terminal.

TUI (Text User Interface):
 - added parsing of escape codes in the preview pane;
 - added parsing of escape codes in explore (less-like) mode;
 - don't redraw file list for explore window on resize;
 - less updates for window in explore mode on resize.

Menus and dialogs:
 - changed the way title of the permissions dialog is composed.

Command-line mode related changes:
 - allowed exclamation mark for the :sync command (to force synchronization of
   cursor position when used without arguments);
 - don't store last command-line command for the dot normal mode command
   between sessions.  Also it doesn't depend on command-line history anymore
   and can be used with completely disabled history;
 - made :execute process its arguments just like :echo command (thanks to
   Daniel Dettlaff, a.k.a. dmilith, which made me discover old behaviour);
 - don't accept arguments to the :help command when 'vimhelp' option is off.

Only on Windows:
 - pause on failed execution of a help command.  Thanks to filterfalse;
 - pause when execution of shell command fails (e.g. on
   `:!foobar-does-not-exist`).

Other changes:
 - added Gentoo ebuild.  Thanks to Oleg Gordienko (a.k.a. gordio);
 - added expand() builtin function to expand macros (thanks to Sebastian
   Cyprych for the use case);
 - less-like mode now highlights multiple matches in a line;
 - less-like mode is now updated immediately when one changes 'wrap' option;
 - save dot files filter state in vifminfo (thanks to Daniel Dettlaff, a.k.a.
   dmilith).

Major fixes:
 - building on FreeBSD and OS X (thanks to Daniel R., a.k.a. r1chelt, and
   Daniel Dettlaff, a.k.a. dmilith);
 - various changes in configuration using autotools;
 - removed using of libtool in build process on *nix-like systems;
 - vifminfo file update on Windows (broken in 0.7.4b);
 - various issues with displaying wide characters (e.g. Chinese);
 - ctrl-W H/J/K/L shortcuts and less-like view;
 - issues with calling Vim on :help command.  Thanks to filterfalse.

See change log for full list of changes and by whom they were suggested.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

April 22, 2013
==============

vifm v0.7.5 beta testing has started
------------------------------------

New version adds one major feature (parsing of escape codes), set of
improvements for existing ones and fixes for bugs.  There are also some
changes in build system and new extra files bundled with vifm.

The beta stage will last about two weeks.  In case any bugs are found
during this period, another beta version will be released.

Main changes:
 - removed using of libtool in build process on *nix-like systems;
 - added parsing of escape codes for the preview pane and less-like view;
 - added expand() builtin function;
 - added Gentoo ebuild and sample color schemes;
 - added macros that are expanded to register's content;
 - added dynamic loading of xlib;
 - added 'shortmess' option;
 - fixed build issues on FreeBSD and OS X systems;
 - fixes for redrawing and searching in less-like mode.

More detailed list of changes.

Configuration:
 - added --without/[with]-dyn-X11 flag to the configure script to control
   static/dynamic linking against libX11 library.  Thanks to Hendrik Jaeger
   (a.k.a. henk) for the idea;
 - don't use libtool in build process on *nix platforms (thanks to Merovius).

Documentation:
 - slightly updated plugin related documentation.

Macros:
 - added macros that are expanded to register's content (thanks to Florian
   Baumann, a.k.a. derflob).

:set command and options:
 - added 'shortmess' option and its first flag: "T" to shorten long status-bar
   messages (thanks to ranousse);
 - added "perms" sorting key on *nix (proposed by Daniel Dettlaff, a.k.a.
   dmilith);
 - added new type of option (charset) and used it for 'cpoptions' and
   'shortmess' options;
 - made 'slowfs' option actually work on OS X (thanks to Daniel Dettlaff,
   a.k.a. dmilith).

Color scheme related changes:
 - added sample color schemes (proposed by Daniel Dettlaff, a.k.a. dmilith);
 - don't fallback to default colors on try to switch to a colorscheme, which
   is not supported by terminal.

TUI (Text User Interface):
 - added parsing of escape codes in the preview pane;
 - added parsing of escape codes in explore (less-like) mode;
 - don't redraw file list for explore window on resize;
 - less updates for window in explore mode on resize.

Menus and dialogs:
 - changed the way title of the permissions dialog is composed.

Command-line mode related changes:
 - allowed exclamation mark for the :sync command (to force synchronization
   of cursor position when used without arguments);
 - don't store last command-line command for the dot normal mode command
   between sessions.  Also it doesn't depend on command-line history anymore
   and can be used with completely disabled history;
 - made :execute process its arguments just like :echo command (thanks to
   Daniel Dettlaff, a.k.a. dmilith, which made me discover old behaviour).

Other changes:
 - added Gentoo ebuild.  Thanks to Oleg Gordienko (a.k.a. gordio);
 - added expand() builtin function to expand macros (thanks to Sebastian
   Cyprych for the use case);
 - less-like mode now highlights multiple matches in a line;
 - less-like mode is now updated immediately when one changes 'wrap' option;
 - save dot files filter state in vifminfo (thanks to Daniel Dettlaff, a.k.a.
   dmilith).

Major fixes:
 - building on FreeBSD and OS X (thanks to Daniel R., a.k.a. r1chelt, and
   Daniel Dettlaff, a.k.a. dmilith);
 - various changes in configuration using autotools;
 - removed using of libtool in build process on *nix-like systems;
 - vifminfo file update on Windows (broken in 0.7.4b);
 - various issues with displaying wide characters (e.g. Chinese);
 - ctrl-W H/J/K/L shortcuts and less-like view.

See change log for full list of changes and by whom they were suggested.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

January 21, 2013
================

vifm v0.7.4b release
--------------------

This version is a minor bugfix release.  It doesn't contain any new
features.  The release fixes more than 17 bugs found since version
0.7.4a.

Two weeks since beta version was published have passed.  Since no bugs
were reported, the beta version is now released as 0.7.4b without
any changes except version number.

Fixes in this version are related to the following subjects:
 - interaction with the screen tool (thanks to Jing Liu);
 - working with registers (old, but unreported bugs);
 - rights elevation and dot directories on Windows;
 - processing of vifminfo file (thanks to Christoph, a.k.a informationen);
 - handling of colorscheme files (thanks to Charles Kauffman);
 - displaying of CJK characters (thanks to lcj);
 - 'classify' option (thanks to Thomas Nemeth).

See change log for full list of fixes.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

January 7, 2013
===============

vifm v0.7.4b beta testing has started
-------------------------------------

This version is a minor bugfix release.  It doesn't contain any new
features.  The release fixes more than 17 bugs found since version
0.7.4a.

Because of promise not to release anything without beta-testing,
even this bugfix release has a beta stage, which should last about
two weeks. In case some bugs will be found, a second beta will be
released in a week.

Fixes are related to the following subjects:
 - interaction with the screen tool (thanks to Jing Liu);
 - working with registers (old, but unreported bugs);
 - rights elevation and dot directories on Windows;
 - processing of vifminfo file (thanks to Christoph, a.k.a informationen);
 - handling of colorscheme files (thanks to Charles Kauffman);
 - displaying of CJK characters (thanks to lcj);
 - 'classify' option (thanks to Thomas Nemeth).

See change log for full list of fixes.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

October 22, 2012
================

vifm v0.7.4a
------------

0.7.4 package contains configuration files of autotools of different
versions.  As a result it's not always possible to build vifm 0.7.4 by
running `./configure && make`.  The author is sorry about wasted time
of users spent on building vifm with partially broken build system.

Anyway this mistake has also a good point.  0.7.4a fixes several bugs,
some of which are related to new features.

See change log for full list of fixes.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

October 18, 2012
================

vifm v0.7.4
-----------

0.7.4 is a minor release, which improves existing features as well as adds
some new ones.

There are two main directions in which improvements were made.  One of them
is TUI, which now has support of multiple columns and ls-like view as well as
customizable file name decoration (prefix and suffix).  The second one is
connected with command interpreter, which now supports builtin functions,
conditional operators and conditional execution of commands
(using if-else-endif statements).  Additionally, vifm's memory footprint was
made smaller and running of programs associated with files made smarter
(won't stop until existing program is found).

Main changes:
 - new multicolumn view;
 - new ls-like view (see 'lsview' option) and related keys for it;
 - prefixes and suffixes of files of different types are configurable now;
 - smarter handling of file associations (now vifm will try to find existing
   program);
 - some basic means to do scripting (if-else-endif statements, builtin
   functions, comparison operators);
 - reduced history memory consumption;
 - better configure script, which now checks more stuff (and does it in a
   more accurate way) needed to build vifm.

More detailed list of changes.

Configuration:
 - removed compile-time compatibility mode (the compatibility-mode switch),
   now "f" flag in 'cpoptions' does the same;
 - added --without/[with]-X11 configure script option;
 - configure script now checks much more then before;
 - better make files (thanks to Hendrik Jaeger).

Only on Windows:
 - replaced gl normal mode mapping for Windows with gr because of conflict
   (with 'lsview');
 - allow paths in :file[x]type command that contain spaces to be doublequoted
   on Windows.

Normal and visual modes related changes:
 - added Ctrl-W H/J/K/L normal mode keys;
 - added gh, gj, gk and gl keys for normal and visual modes;
 - added 0, ^ and $ keys for normal and visual modes, which also work as
   selectors in normal mode.

Command-line mode related changes:
 - added Ctrl-T handling in command line to swap characters;
 - added Meta-. handling in command line to paste last parts of previous
   commands;
 - added :echo command;
 - added :if, :else and :endif commands;
 - added support for `==` and `!=` operators;
 - added :normal command;
 - added mapping commands for view and menu modes;
 - changed relative path base for :split and :vsplit commands;
 - expand macros for user defined commands.

:set command and options:
 - added 'viewcolumns' local option to control view columns;
 - added 'lsview' option to control ls-like view look;
 - added 'dotdirs' option to control visibility of "../" directory;
 - added 'classify' option to set prefixes and suffixes for different file
   types;
 - added %E 'statusline' option macro, which means size of all selected files
   or current file, if no files are selected;
 - added "t" flag to 'cpoptions' option (replaces compile-time compatibility
   mode).

Completion:
 - added completion for :set option= even for options without variants;
 - complete only directory names for :split and :vsplit commands;
 - escape pipe character during :file completion;
 - complete :set for short and full option names like Vim does (e.g. 'so'
   should be expanded to 'sort', not only 'scrolloff').

TUI (Terminal User Interface):
 - added status bar messages for :apropos, :find and :locate commands;
 - flicker less on :restart command;
 - don't show Ctrl-C part in information message boxes where it doesn't make
   sense;
 - reduce delay between terminal resize and TUI redrawing;
 - fixed background bold (light) colors in linux native console.

Color scheme related changes:
 - added light versions of color names.

Key bindings:
 - don't pause on '0' after Ctrl-W (count cannot start with zero);
 - multiply counts in front and in the middle of commands with Ctrl-W (as Vim
   does);
 - multiply counts in front of command and its selector (as Vim does).

Other changes:
 - added support for builtin functions and filetype() as the first one;
 - check current view of other pane on leaving FUSE mount directory an don't
   unmount if that file system is still in use;
 - try the rest of the programs for an association when the default one isn't
   found;
 - reduced memory consumption of view histories.

And fixes of bugs and memory leaks.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

June 23, 2012
=============

vifm v0.7.3a
------------

It happens some bugs are discovered just after making a new release.  And it
happened with vifm 0.7.3, which was tested, but apparently not enough.  So
0.7.3a is a bugfix release, which contains fixes for one serious bug and
several small ones as well as adds some more information to the documentation
and very small enhancements.

If you would like to be notified about future releases of vifm or some
important news related to vifm by email, consider subscribing to recently
created vifm-announce@lists.sourceforge.net read-only mailing list.  You can
do this by following this link.

Though this is a bugfix release it has some changes since v0.7.3 that should
be mentioned:

Completion:
 - better completion for :colorscheme command.

Documentation:
 - added a section about color schemes to the documentation;
 - documented that %m, %M, %s, %S and %i have bigger priority than &;
 - documented that %m, %M, %s, %S and %i are mutually exclusive;
 - documented treating of whitespace around option names in :set command.

:set command and options:
 - allowed whitespace after option name in :set command;
 - added checks for correct value of 'tabstop' and 'timeoutlen' options;
 - reset 'columns' and 'lines' options to real number of columns;
 - reset value of 'scrolloff' option to zero on attempt to assign a negative
   value to it;
 - faster execution of `:set sort=foo sortorder sortnumbers` in vifmrc.

TUI (Terminal User Interface):
 - faster redrawing of statusbar with "-- VISUAL --" message after "Press
   Enter" message.

Command-line mode related changes:
 - expand tilde in the second argument of :colorscheme command;
 - forbid relative paths in :colorscheme command until vifm is completely
   loaded;
 - pass range given to alias to an aliased command.

Performance:
 - faster Ctrl-W x, Ctrl-W o, Ctrl-W s, Ctrl-W v, Ctrl-W =, Ctrl-W <,
   Ctrl-W >, Ctrl-W -, Ctrl-W +, Ctrl-W |, Ctrl-W _;
 - faster redraw on terminal resizing;
 - made file filtering using regular expressions work faster (matters when
   directory contains several thousands files);
 - draw quickview on startup only once.

Normal and visual modes related changes:
 - show correct number of selected files in visual mode after n and N keys.

And bug fixes.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

June 3, 2012
============

vifm v0.7.3 release
-------------------

If you would like to be notified about future releases of vifm or some
important news related to vifm by email, consider subscribing to recently
created vifm-announce@lists.sourceforge.net read-only mailing list.  You can
do this by following this link.

Changes since v0.7.2 in general:
 - removed support of moving items in the :file menu;
 - added description of :file programs;
 - improved messages in the TUI as well as it's redrawing in various
   scenarios;
 - changed behaviour of Enter key on a selected directories;
 - better work with PATH environment variable.

Changes since v0.7.2 in details:

Completion:
 - added completion for :copy, :clone, :move, :alink, :rlink and :rename
   commands;
 - added completion for :touch and :mkdir commands;
 - added completion for :split and :vsplit commands.

TUI (Terminal User Interface):
 - added Ctrl-L handling in file info (Ctrl-G) mode;
 - less blinking of the screen in various scenarios;
 - replace home directory with the tilde in terminal title;
 - corrected status bar messages about failed search;
 - better handling of multiline messages in status bar.

Normal and visual modes related changes:
 - leave leading zeros on Ctrl-A/X commands;
 - added "Y" key to visual mode as an alias for "yy";
 - open selected directories with l or Enter keys.

Configuration:
 - added --enable-desktop-files (enabled by default) configure option.

Only on Windows:
 - allow bookmarking of host names on Windows (e.g. //ZX-SPECTRUM);
 - show host's root in history menu (e.g. //ZX_SPECTRUM);
 - made :fileviewer command work.

Macros:
 - added macros expansion for :touch and :mkdir commands;
 - added %i macro to completely ignore output of external commands.

Command-line mode related changes:
 - added :finish command to use in sourced scripts;
 - improved :let command (allowed using of expressions at the right side of
   the statement);
 - properly handle when user alters PATH environment variable using :let
   command;
 - added description for :filetype, :filextype and :fileviewer commands;
 - save last typed but not executed command in command-line mode (this also
   includes searches).

Menus and dialogs:
 - removed possibility of moving items in :file menu;
 - added size of file in bytes in file info mode (Ctrl-G);
 - added q key to close menus.

Other changes:
 - added notes about automatic FUSE mounts to the documentation;
 - now vifm removes scripts (`$VIFM/scripts/**`) from PATH for :shell command;
 - use common search history for normal, visual and menu modes;
 - increased directory modification stamp precision on Unix.

Plus bug fixes of course.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

February 19, 2012
=================

vifm v0.7.2
-----------

Changes since v0.7.1 :set command and options:
 - added 'rulerformat' option;
 - added 'statusline' option;
 - added 'columns' and 'lines' options;
 - added 'trashdir' option (by Chris Skalenda).

Command-line mode related changes:
 - added optional argument for the :sync command;
 - added support for running :cmap, :nmap and :vmap with one argument;
 - added recursive mode for :rename command;
 - added :let and :unlet commands to work with environment variables;
 - added :windo and :winrun commands;
 - never change active view on :restart command;
 - allowed using of macros with :clone command.

Angle bracket notation:
 - added <esc>.

Only on Windows:
 - added embedded icon;
 - added file properties dialog;
 - show "Sorting directory..." message only for big directories;
 - change console title;
 - made determining of home directory more intelligent;
 - made 'sortnumbers' work;
 - avoid unnecessary directory view updates (like after C key);
 - allow using of backward slashes in :rename command;
 - let :s and :gs filename modifiers change slash type;
 - properly quit vifm on console closing;
 - added :u filename modifier for UNC computer name;
 - added file attributes in status bar and file info view.

Normal and visual modes related changes:
 - added ctrl-w p, ctrl-w b and ctrl-w t normal mode keys.

Configuration:
 - added $VIFM and $MYVIFMRC environment variables;
 - now vifm will add all subdirectories of ~/.vifm/scripts to PATH;
 - better check for old-style color schemes file.

For Vim:
 - added g:vifm_exec_args variable for the plugin.

Other changes:
 - added --select command line argument;
 - added --remote command line argument;
 - added support for character classes in globals;
 - restore terminal title on exit;
 - reset dot and filename filters if they hide bookmarked file;
 - made vifm react faster on external changes.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

November 15, 2011
=================

vifm v0.7.1
-----------

Major changes since v0.7.0:
 - changed meaning of :split command (so replace it with :vsplit in your
   vifmrc);
 - added backgrounding of :copy, :move, :delete, ga and gA commands;
 - added horizontal splitting and keys to control size of the panes;
 - added less-like view mode;
 - made some changes to the Vim plugin;
 - windows version was made much more usable.

Changes in details

:set command and options:
 - added 'scrollbind', 'wrapscan', 'incsearch', 'cpoptions', 'laststatus' and
   'tabstop' options;
 - make 'ignorecase' and 'smartcase' affect f and F;
 - don't use position in the view on ' key, when 'autochpos' is off.

Angle bracket notation:
 - added support for more angle bracket notations in mappings (<bs>, <tab>,
   <s-tab>, <home>, <end>, <left>, <right>, <up>, <down>, <pageup>,
   <pagedown>, <del>, <delete>, <m-a>, <m-b>, ..., <m-z>);
 - added <s-f1>, ..., <s-f12>, <a-f1>, ..., <a-f12>, <c-f1>, ..., <c-f12>,
   only for Windows;
 - added <a-X> as synonyms for <m-X> (where X is a key);
 - added angle bracket notation <c-s-X> and <s-c-X> as synonyms for <c-X>;
 - added Ctrl + Alt + letter combinations, only for Unix.

Command-line mode related changes:
 - added :split! to toggle between only and split view;
 - added :file to quick run one of associated commands;
 - added backgrounding of :copy, :move and :delete commands;
 - added :delete!;
 - added :execute, :source commands;
 - added support for using environment variables as :cd or :pushd arguments;
 - added support for :substitute command without arguments;
 - added notation to run internal vifm commands from user defined commands;
 - allowed exclamation mark for :view command (to prevent view closing);
 - allowed question mark for :mark command (to prevent bookmark overwriting).

Completion:
 - added completion of environment variables (:cd, :pushd, :! and :!!).

Normal and visual modes related changes:
 - added '(' and ')' keys for normal and visual modes;
 - added Ctrl-A and Ctrl-X keys (normal and visual modes);
 - added e key for normal mode;
 - made i key work in visual mode;
 - made ga and gA work in background;
 - better cW command;
 - clean selection after i key in normal mode.

Menus and dialogs:
 - added year in the file info dialog (on Ctrl-G);
 - added zh, zl, zH and zL keys for the menus (horizontal scrolling);
 - added ZQ and ZZ keys to close menus and dialogs.

TUI (Terminal User Interface):
 - added horizontal splitting of views (changed :split command, added :vsplit
   command, changed Ctrl-w s mapping);
 - added Ctrl-w j and Ctrl-w k keys;
 - added Ctrl-w <, Ctrl-w >, Ctrl-w + and Ctrl-w - keys;
 - added Ctrl-w | and Ctrl-w _ keys.

File cloning:
 - don't change file extension on cloning;
 - move cursor to clone of current file after file cloning;
 - smarter file name generation on cloning;
 - made C command accept count.

Only on Windows:
 - added kind of portable mode on Windows;
 - make macros expand to paths with forward slashes on Windows;
 - better check if directory was changed on Windows;
 - show all shares on Windows (including private ones);
 - fixed a lot of bugs on Windows.

For Vim:
 - added g:vifm_exec variable for the plugin;
 - added ftdetect plugin for vim (now there is no need for modelines or
   changing .vimrc);
 - allowed arguments for plugin's commands;
 - added more tags to the documentation in vim-help format.

Other changes:
 - added Ctrl-n (j) and Ctrl-p (k) keys;
 - added view mode (see documentation);
 - added -c and + command line arguments;
 - added support of [count] for / and ?;
 - don't clear terminal title on exit;
 - warn about symbolic links are not available;
 - don't show current file as selected after executing a :command and resizing
   terminal while it works;
 - show progress message (e.g. on :copy) after terminal is resized;
 - made some messages about operations more correct.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

September 29, 2011
==================

vifm v0.7.0 is out!
-------------------

And as it was promised vifm is back on Windows!

This release breaks compatibility a little, which was done intensionally to
make vifm more vi-like.  I hope that wont make too much discomfort for users,
at least I tried to reduce discomfort as much as I can.  In particular, an
utility program named vifmrc-converter is shipped with vifm now.  It's main
purpose is to automatically convert configuration files (vifmrc, vifminfo,
startup and colorschemes files) to new format.  You don't have to run it by
yourself, vifm will do this for you after asking some questions at first
startup.

Here are the main changes by categories.

Configuration:
 - changed format of ~/.vifm/vifmrc and ~/.vifm/vifminfo files;
 - removed support of startup file, all commands will be automatically moved
   to the vifmrc file;
 - added support for multi line commands in the vifmrc (ex-startup) file;
 - now users can place scripts for vifm to ~/.vifm/scripts, vifm modifies its
   PATH environment variable to let user run scripts without specifying full
   path;
 - now vifm also accepts paths to files as the startup arguments and
   --no-configs option.

Normal and visual modes related changes:
 - added gf, al, rl and cl commands for dealing with symbolic links;
 - added gu and gU commands (and their variations);
 - added gs command to work with t selection like gv with visual mode
   selection;
 - made C handle selection, check read permission and work in visual mode;
 - changed the way l key handles selection and made it work in visual mode.

Command-line mode related changes:
 - removed :cmdhistory command, use :history cmd or ":history :" instead;
 - added :noremap, :cnoremap, :nnoremap, :vnoremap, :unmap, :cunmap, :nunmap
   and :vunmap commands;
 - added :filetype, :filextype and :fileviewer commands;
 - added :find and :grep commands;
 - added :substitute and :tr commands;
 - added :clone, :copy, :move, :alink and :rlink commands;
 - added :chmod, :chown, :mkdir and :touch commands;
 - added :mark, :delmarks, :comclear, :highlight, :restart and :messages
   command;
 - documented command line keys and marked which :commands accept ranges;
 - now vifm understands user name after tilde in paths;
 - let user use short forms of user-defined commands with "!".

Completion:
 - added completion for co, cg, cw and cW commands;
 - sort completion items;
 - shift-Tab command line key to perform completion in reversed order;
 - added Ctrl-_ command-line key to reject completion.

Macros:
 - added filename modifiers (:p, :~, :., :h, :t, :r, :e, :s and :gs);
 - added %S and %M macros;
 - added macros that are expanded to paths enclosed in double quotes (%"c,
   %"C, %"f, %"F, %"b, %"d and %"D);
 - handle %m, %M, %s and %S in the :! command.

:set command and options:
 - removed 'savelocation' option. Use :set vifminfo+=dhistory;
 - added 'wildmenu', 'ignorecase', 'smartcase', 'hlsearch', 'vifminfo',
   'shell', 'vixcmd', 'scrolloff', 'timeoutlen', 'autochpos','gdefault',
   'slowfs' options;
 - added abbreviations for options;
 - added support for using ':' instead of '=';
 - support for ':set' and ':set all' commands;
 - made ':set option' equivalent to ':set option?' for all types of options
   except boolean;
 - made 'history' option control search, command line and prompt histories;
 - better 'sort' option (support by multiple sort keys, added iname key);
 - made 'vicmd' and 'vixcmd' understand & at the end;
 - :set command now understands & (reset option to its default value).

Color scheme related changes:
 - all color schemes are stored under the ~/.vifm/colors/ directory, each
   color scheme in its own file;
 - color scheme file is a list of commands. All command-line commands are
   handled, but only :highlight commands are really useful here;
 - added colors for current top line, other top line, status line, error
   messages in the status bar, broken links and FIFO files;
 - now maximum number of color schemes is unlimited even on 8-color terminals
   (there was a limit of 5 color schemes for such terminals before).

Only on Windows:
 - gl normal mode key;
 - UNC names support;
 - :volumes command.

For Vim:
 - added g:vifm_term variable for the plugin;
 - added vifmrc syntax and filetype files for Vim;
 - tags for some items in the help file for Vim.

Other changes:
 - let user go through directories with execute access, but no read access;
 - made filetype understand star as in globals;
 - removed duplicates from command and directory history;
 - made directory, command line and search histories as well as dirstack and
   registers persistent (when 'vifminfo' option contains appropriate value);
 - show search matches in the menus;
 - now keys can be used in mappings and mapping of keys like y, d or m works
   right;
 - modify terminal emulator title;
 - don't quit when terminal is too small (print message and ignore input);
 - fixed bugs.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

July 20, 2011
=============

vifm-0.6.3
----------

Main changes in vifm-0.6.3:
 - added another format for filetype (FUSE_MOUNT2);
 - added %CLEAR FUSE mount parameter.  See vifmrc for details;
 - added %c and %C macros (current file of current and other directories, not
   selected file or files);
 - added :rename command (opens vi to let you edit names for selected file or
   files);
 - added undo list (u, Ctrl-R and :undolist commands; 'undolevels' option);
 - added small FAQ;
 - added gA command (like ga, but forces update);
 - added whole line comments (can be useful in startup file);
 - added :dirs command (shows directory stack);
 - added 'sortnumbers', 'followlinks', 'fusehome', 'confirm' and 'history'
   options;
 - added dialog to ask user about backwards range in command;
 - added some vi like keys for menus, dialogs and visual mode;
 - added 'savelocation' option (start vifm in the last visited directory)
   which is off be default thus returning old behaviour when vifm is started
   with no argument;
 - added gv command for visual mode;
 - enter key in visual mode will leave it saving selection;
 - now location of panes is saved in ~/.vifm/vifminfo instead of
   ~/.vifm/vifmr;
 - now builtin keys can be remapped;
 - don't replace escape sequences for :! and :!! commands;
 - more vi like completion and history in command line and search;
 - some improvements for :filter command;
 - some improvements for command ranges;
 - now ranges modify %f macro for user defined commands;
 - made f and F work with wide characters;
 - made option parser handle quotes;
 - rename files in Trash (to avoid name conflicts);
 - don't terminate background processes on vifm exit;
 - remove files that are in the Trash on :empty command from all registers;
 - don't ignore Ctrl-Z;
 - don't clear screen on shellout;
 - updated Vim plugin;
 - fixed a lot of bugs;

See ChangeLog for details.  Also see THANKS file that was added in this
release.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

June 19, 2011
=============

vifm-0.6.2
-----------

This release fixes some bugs and adds several commands for different modes.

Main changes:
 - added map menus (run :cmap, :vmap, :nmap commands without arguments);
 - added :cmdhistory command;
 - added 'fastrun' option;
 - added o and O keys for Visual mode (go to other end of selection);
 - added gv Normal mode command;
 - added support for spaces and functional keys in mappings (<space> and
   <f0> - <f63>);
 - added mimetype to fileinfo dialog;
 - added %b command macro;
 - implemented :yank and :colorscheme commands;
 - made filetype menu editable;
 - restore SIGINT (Ctrl+C) default behaviour on shellout;
 - replace escape sequences in quick view output with ^foo;
 - give options if a file already exists in destination directory;
 - unmount all FUSE mounts on exit;
 - more verbose version information;
 - added Ctrl-C key handling to error message dialog;
 - use file command when GTK+ and libmagic are disabled;
 - better error messages;
 - use ga command results to sort by size;
 - fixed paths in config.c to work with non standard install prefix;
 - fixed several bugs with command completion and terminal resizing.

See ChangeLog for details and AUTHORS for information about authors.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

June 11, 2011
=============

Vifm-0.6.1 is available.
------------------------

Windows version remains unchanged for now.  I'm planning to use one code base
for both Unix and Windows platforms and it would take some time to do that.

Major changes since 0.5:
 - added support for user mappings;
 - added file selectors (like motions and text-objects);
 - improved sort dialog;
 - added filetype detection using GTK+ or libmagic (:file);
 - added directory stack (:pushd, :popd);
 - added completion for :! and :!! commands;
 - added custom file viewers (:view);
 - added startup file;
 - better utf8 support;
 - added :set command and options.

See ChangeLog for details.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

August 7, 2009
==============

Vifm-0.5 is available.
----------------------

This release is mainly user contributed patches and a new port for Windows.
A filetype setting was added to allow the mounting of files with fuse-zip and
other filesystems based on fuse.  The :com input was changed to accept wide
characters.  The Windows port is missing some of the features of the Unix
version but it is useful and stable enough for an initial release.  The
following commands were added in the Windows port:
 - :copy;
 - :move;
 - :volume - list mounted volumes.
